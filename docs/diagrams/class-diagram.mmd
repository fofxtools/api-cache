classDiagram
    class ApiCacheHandler {
        -CacheRepository repository
        -RateLimitService rateLimiter
        +processRequest(BaseApiClient, string, array) array
        -getCachedResponse(string) array
        -cacheResponse(string, array, string, int) void
        +generateCacheKey(string, string, array, string, string) string
        +normalizeParams(array, int) array
    }
    
    class BaseApiClient {
        #string clientName
        #string baseUrl
        #string apiKey
        #string version
        #PendingRequest pendingRequest
        #ApiCacheHandler handler
        +__construct(string, string, string, string, ApiCacheHandler)
        +sendRequest(string, array, string) array
        +sendCachedRequest(string, array, string) array
        +getVersion() string
        +getClientName() string
        +buildUrl(string)* string
    }
    
    class CacheRepository {
        -Connection db
        -CompressionService compression
        +store(string, string, array, int) void
        +get(string, string) array
        +cleanup(string) void
        -getTableName(string) string
        -prepareHeaders(array) string
        -retrieveHeaders(string) array
        -prepareBody(string) string
        -retrieveBody(string) string
    }
    
    class RateLimitService {
        -RateLimiter limiter
        +allowRequest(string) bool
        +incrementAttempts(string) void
        +getRemainingAttempts(string) int
    }
    
    class CompressionService {
        -bool enabled
        +compress(string) string
        +decompress(string) string
        +isEnabled() bool
    }
    
    class DemoApiClient {
        +buildUrl(string) string
        +prediction(string, int, array) array
        +report(string, string, array) array
    }
    
    class OpenAIApiClient {
        +buildUrl(string) string
        +completions(string, string, int, int, float, float, array) array
        +chatCompletions(array|string, string, int, int, float, float, array) array
    }
    
    class ApiCacheException {
        #array context
        +getContext() array
    }
    
    class RateLimitException {
        #string clientName
        #int availableInSeconds
        +getClientName() string
        +getAvailableInSeconds() int
    }
    
    class CacheException {
        #string operation
        +getOperation() string
    }
    
    ApiCacheHandler --> CacheRepository : uses
    ApiCacheHandler --> RateLimitService : uses
    CacheRepository --> CompressionService : uses
    BaseApiClient <|-- DemoApiClient : extends
    BaseApiClient <|-- OpenAIApiClient : extends
    ApiCacheException <|-- RateLimitException : extends
    ApiCacheException <|-- CacheException : extends 